// Split the dataset into training and test sets using TestTrain class
		int splitSize = 80; // 80% for training
		TestTrain testTrainSplit = new TestTrain(dataset, splitSize, rng);

		// Initialize and train the random forest on the training set
		int numTrees = 10; // Adjust as needed
		int maxFeatures = 6; // Adjust as needed
		int minSamplesLeaf = 5; // Adjust as needed
		RandomForest randomForest = new RandomForest(testTrainSplit.train, numTrees, maxFeatures, minSamplesLeaf);

		// Evaluate the model on the test set
		int correctPredictions = 0;
		for (int i = 0; i < testTrainSplit.test.getSize(); i++) {
			Instance instance = testTrainSplit.test.getInstance(i);
			double[] features = instance.getFeatureVector();
			int actualLabel = instance.getLabelIndex();

			// Predict the label using the random forest
			int predictedLabel = randomForest.predictLabel(features);

			// Compare predicted label with actual label
			if (predictedLabel == actualLabel) {
				correctPredictions++;
			}
		}

		// Calculate accuracy on the test set
		double accuracy = (double) correctPredictions / testTrainSplit.test.getSize();
		System.out.println("Test Accuracy: " + accuracy);